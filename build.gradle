buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse{
	project.natures "org.springsource.ide.eclipse.gradle.core.nature"
	wtp{
		facet{
			facet name: 'jst.web', version : '3.0'
			facet name: 'jst.java', version : '1.8'
		}
	}
}

repositories {
	mavenCentral()
}

ext {
	querydsl = '4.1.4'
}

springBoot {
    mainClass = "net.woniper.querydsl.SpringBootQuerydslApplication"
}

sourceSets {
    generated {
        java {
            srcDirs = ["src/main/generated"]
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor",
            "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

dependencies {
	compile('com.sun.mail:javax.mail')
	compile('javax.mail:mail:1.4.7')
	compile('org.mockito:mockito-all:1.9.5')
    compile 'com.querydsl:querydsl-jpa:' + querydsl
	compile 'com.querydsl:querydsl-apt:' + querydsl
	compile('org.apache.commons:commons-lang3:3.4')
	compile('com.h2database:h2')
	compile('mysql:mysql-connector-java')
	compile 'org.springframework.boot:spring-boot-starter-freemarker:' + springBootVersion
	compile 'org.springframework.boot:spring-boot-starter-data-jpa:' + springBootVersion
	compile 'org.springframework.boot:spring-boot-starter-web:' + springBootVersion
	testCompile 'com.jayway.jsonpath:json-path:2.0.0'
	testCompile 'org.springframework.boot:spring-boot-starter-test:' + springBootVersion
}

eclipse.classpath.file {
    withXml { xml ->
        def node = xml.asNode()
        node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
        node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
    }
}